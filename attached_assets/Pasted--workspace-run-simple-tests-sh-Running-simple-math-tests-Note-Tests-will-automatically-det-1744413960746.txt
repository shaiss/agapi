~/workspace$ ./run-simple-tests.sh
Running simple math tests...
Note: Tests will automatically detect the available server port (tries ports 80, 5000, 5001)
 PASS  ./simple.test.cjs
  Basic Math
    ✓ 1 + 1 equals 2 (4 ms)
    ✓ 2 * 3 equals 6 (1 ms)

Test Suites: 1 passed, 1 total
Tests:       2 passed, 2 total
Snapshots:   0 total
Time:        0.168 s, estimated 1 s
Ran all test suites matching /simple.test.cjs/i.
Running schema validation tests...
Note: Tests will automatically detect the available server port (tries ports 80, 5000, 5001)
 PASS  ./schema.test.cjs
  Zod Schema Validation
    ✓ validates valid user data (5 ms)
    ✓ rejects invalid user data (2 ms)
    ✓ schema validates with optional fields missing (1 ms)

Test Suites: 1 passed, 1 total
Tests:       3 passed, 3 total
Snapshots:   0 total
Time:        0.184 s, estimated 1 s
Ran all test suites matching /schema.test.cjs/i.
Running API tests against server...
Note: Tests will automatically detect the available server port (tries ports 80, 5000, 5001)
  console.log
    Failed to connect to http://localhost:80: connect ECONNREFUSED 127.0.0.1:80

      at findWorkingBaseUrl (auth-helper.test.cjs:34:15)

  console.log
    Successfully connected to http://localhost:5000 (got 401 as expected for unauthenticated request)

      at findWorkingBaseUrl (auth-helper.test.cjs:26:17)

  console.log
    Using base URL: http://localhost:5000

      at initializeBaseUrl (auth-helper.test.cjs:47:11)

  console.log
    Server API tests using base URL: http://localhost:5000

      at Object.<anonymous> (server-api.test.cjs:14:13)

 PASS  ./server-api.test.cjs
  Server API
    ✓ GET /api/user returns 401 when not authenticated (9 ms)
    ✓ GET /api endpoint exists (16 ms)

Test Suites: 1 passed, 1 total
Tests:       2 passed, 2 total
Snapshots:   0 total
Time:        0.327 s, estimated 1 s
Ran all test suites matching /server-api.test.cjs/i.
Running followers API tests...
Note: Tests will automatically detect the available server port (tries ports 80, 5000, 5001)
  console.log
    Failed to connect to http://localhost:80: connect ECONNREFUSED 127.0.0.1:80

      at findWorkingBaseUrl (auth-helper.test.cjs:34:15)

  console.log
    Successfully connected to http://localhost:5000 (got 401 as expected for unauthenticated request)

      at findWorkingBaseUrl (auth-helper.test.cjs:26:17)

  console.log
    Using base URL: http://localhost:5000

      at initializeBaseUrl (auth-helper.test.cjs:47:11)

  console.log
    Followers API tests using base URL: http://localhost:5000

      at Object.<anonymous> (followers-api.test.cjs:29:13)

 PASS  ./followers-api.test.cjs
  Followers API
    ✓ GET /api/followers requires authentication (8 ms)
    ✓ GET /api/followers/:id requires authentication (10 ms)

Test Suites: 1 passed, 1 total
Tests:       2 passed, 2 total
Snapshots:   0 total
Time:        0.324 s, estimated 1 s
Ran all test suites matching /followers-api.test.cjs/i.
Running posts API tests...
Note: Tests will automatically detect the available server port (tries ports 80, 5000, 5001)
  console.log
    Failed to connect to http://localhost:80: connect ECONNREFUSED 127.0.0.1:80

      at findWorkingBaseUrl (auth-helper.test.cjs:34:15)

  console.log
    Successfully connected to http://localhost:5000 (got 401 as expected for unauthenticated request)

      at findWorkingBaseUrl (auth-helper.test.cjs:26:17)

  console.log
    Using base URL: http://localhost:5000

      at initializeBaseUrl (auth-helper.test.cjs:47:11)

  console.log
    Posts API tests using base URL: http://localhost:5000

      at Object.<anonymous> (posts-api.test.cjs:35:13)

 PASS  ./posts-api.test.cjs
  Posts API
    ✓ GET /api/posts requires authentication (10 ms)
    ✓ GET /api/posts/:id is publicly accessible (8 ms)
    ✓ POST /api/posts requires authentication (7 ms)

Test Suites: 1 passed, 1 total
Tests:       3 passed, 3 total
Snapshots:   0 total
Time:        0.349 s, estimated 1 s
Ran all test suites matching /posts-api.test.cjs/i.
Running circles API tests...
Note: Tests will automatically detect the available server port (tries ports 80, 5000, 5001)
  console.log
    Failed to connect to http://localhost:80: connect ECONNREFUSED 127.0.0.1:80

      at findWorkingBaseUrl (auth-helper.test.cjs:34:15)

  console.log
    Successfully connected to http://localhost:5000 (got 401 as expected for unauthenticated request)

      at findWorkingBaseUrl (auth-helper.test.cjs:26:17)

  console.log
    Using base URL: http://localhost:5000

      at initializeBaseUrl (auth-helper.test.cjs:47:11)

  console.log
    Circles API tests using base URL: http://localhost:5000

      at Object.<anonymous> (circles-api.test.cjs:43:13)

 PASS  ./circles-api.test.cjs
  Circles API
    ✓ GET /api/circles requires authentication (7 ms)
    ✓ GET /api/circles/:id requires authentication (7 ms)
    ✓ POST /api/circles requires authentication (14 ms)
    ✓ GET /api/circles/:id/members is publicly accessible (10 ms)
    ✓ POST /api/circles/:id/members is publicly accessible (9 ms)

Test Suites: 1 passed, 1 total
Tests:       5 passed, 5 total
Snapshots:   0 total
Time:        0.409 s, estimated 1 s
Ran all test suites matching /circles-api.test.cjs/i.
Running authentication tests...
Note: Tests will automatically detect the available server port (tries ports 80, 5000, 5001)
  console.log
    Failed to connect to http://localhost:80: connect ECONNREFUSED 127.0.0.1:80

      at findWorkingBaseUrl (auth-helper.test.cjs:34:15)

  console.log
    Successfully connected to http://localhost:5000 (got 401 as expected for unauthenticated request)

      at findWorkingBaseUrl (auth-helper.test.cjs:26:17)

  console.log
    Using base URL: http://localhost:5000

      at initializeBaseUrl (auth-helper.test.cjs:47:11)

  console.log
    Auth endpoints tests using base URL: http://localhost:5000

      at Object.<anonymous> (auth-endpoints.test.cjs:21:11)

  console.log
    Attempting to register user: testuser_1744413944389

      at registerTestUser (auth-helper.test.cjs:95:11)

  console.log
    Registration response status: 200

      at registerTestUser (auth-helper.test.cjs:103:13)

  console.log
    Test user registration successful or user already exists

      at registerTestUser (auth-helper.test.cjs:108:15)

  console.log
    Registered user data: {"username":"testuser_1744413944389","password":"testpassword","email":"test_1744413944389@example.com"}

      at registerTestUser (auth-helper.test.cjs:117:15)

  console.log
    Attempting to register user: testuser_1744413944403

      at registerTestUser (auth-helper.test.cjs:95:11)

  console.log
    Registration response status: 200

      at registerTestUser (auth-helper.test.cjs:103:13)

  console.log
    Test user registration successful or user already exists

      at registerTestUser (auth-helper.test.cjs:108:15)

  console.log
    Registered user data: {"username":"testuser_1744413944403","password":"testpassword","email":"test_1744413944403@example.com"}

      at registerTestUser (auth-helper.test.cjs:117:15)

  console.log
    Login endpoint returned status: 200

      at Object.<anonymous> (auth-endpoints.test.cjs:66:15)

 PASS  ./auth-endpoints.test.cjs
  Authentication Endpoints
    ✓ Registration endpoint exists and accepts requests (14 ms)
    ✓ Login endpoint returns successful response (23 ms)

Test Suites: 1 passed, 1 total
Tests:       2 passed, 2 total
Snapshots:   0 total
Time:        0.344 s, estimated 1 s
Ran all test suites matching /auth-endpoints.test.cjs/i.
Running data creation tests...
Note: These tests create actual data in the database
Do you want to run these tests? (y/n): Y
Running data creation tests...
Note: Tests will automatically detect the available server port (tries ports 80, 5000, 5001)
  console.log
    Failed to connect to http://localhost:80: connect ECONNREFUSED 127.0.0.1:80

      at findWorkingBaseUrl (auth-helper.test.cjs:34:15)

  console.log
    Successfully connected to http://localhost:5000 (got 401 as expected for unauthenticated request)

      at findWorkingBaseUrl (auth-helper.test.cjs:26:17)

  console.log
    Using base URL: http://localhost:5000

      at initializeBaseUrl (auth-helper.test.cjs:47:11)

  console.log
    Data Creation tests using base URL: http://localhost:5000

      at Object.<anonymous> (data-creation.test.cjs:33:13)

  console.log
    Attempting to register user: testuser_208f320a

      at registerTestUser (auth-helper.test.cjs:95:11)

  console.log
    Registration response status: 200

      at registerTestUser (auth-helper.test.cjs:103:13)

  console.log
    Test user registration successful or user already exists

      at registerTestUser (auth-helper.test.cjs:108:15)

  console.log
    Registered user data: {"username":"testuser_208f320a","password":"testpassword","email":"test_208f320a@example.com"}

      at registerTestUser (auth-helper.test.cjs:117:15)

  console.log
    Test user login successful

      at loginTestUser (auth-helper.test.cjs:154:15)

  console.log
    Testing authentication for user: testuser_208f320a

      at getAuthenticatedAgent (auth-helper.test.cjs:212:13)

  console.error
    Authentication check failed - user is not authenticated

      215 |     const authenticated = await isAuthenticated(authenticatedAgent);
      216 |     if (!authenticated) {
    > 217 |       console.error('Authentication check failed - user is not authenticated');
          |               ^
      218 |       throw new Error('Failed to authenticate test user');
      219 |     }
      220 |     

      at getAuthenticatedAgent (auth-helper.test.cjs:217:15)
      at Object.<anonymous> (data-creation.test.cjs:49:22)

  console.error
    Error getting authenticated agent: Error: Failed to authenticate test user
        at getAuthenticatedAgent (/home/runner/workspace/auth-helper.test.cjs:218:13)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at Object.<anonymous> (/home/runner/workspace/data-creation.test.cjs:49:22)

      224 |     return { agent: authenticatedAgent, user };
      225 |   } catch (error) {
    > 226 |     console.error('Error getting authenticated agent:', error);
          |             ^
      227 |     throw error;
      228 |   }
      229 | }

      at getAuthenticatedAgent (auth-helper.test.cjs:226:13)
      at Object.<anonymous> (data-creation.test.cjs:49:22)

  console.warn
    Enhanced authentication failed, falling back to manual approach

      53 |         console.log(`Successfully authenticated with user ID: ${testUser.id || 'unknown'}`);
      54 |       } catch (authError) {
    > 55 |         console.warn('Enhanced authentication failed, falling back to manual approach');
         |                 ^
      56 |         
      57 |         // Fall back to creating the user manually
      58 |         const agent = supertest.agent(BASE_URL);

      at Object.<anonymous> (data-creation.test.cjs:55:17)

  console.log
    Attempting to register user: testuser_1744413948080

      at registerTestUser (auth-helper.test.cjs:95:11)

  console.log
    Registration response status: 200

      at registerTestUser (auth-helper.test.cjs:103:13)

  console.log
    Test user registration successful or user already exists

      at registerTestUser (auth-helper.test.cjs:108:15)

  console.log
    Registered user data: {"username":"testuser_1744413948080","password":"testpassword","email":"testuser_1744413948080@example.com"}

      at registerTestUser (auth-helper.test.cjs:117:15)

  console.log
    Registered test user: testuser_1744413948080

      at Object.<anonymous> (data-creation.test.cjs:62:17)

  console.log
    Test user login successful

      at loginTestUser (auth-helper.test.cjs:154:15)

  console.log
    Manual authentication successful

      at Object.<anonymous> (data-creation.test.cjs:69:19)

 FAIL  ./data-creation.test.cjs
  Data Creation Tests
    User Profile Tests
      ✕ Can retrieve authenticated user profile (11 ms)
      ✕ Can update user profile (9 ms)
    Circle Tests
      ✕ Can create a new circle (8 ms)
      ✕ Can retrieve created circle (2 ms)
      ✕ Can update circle details (1 ms)
    Post Tests
      ✕ Can create a new post (9 ms)
      ✕ Can retrieve created post (1 ms)
    AI Follower Tests
      ✕ Can create a new AI follower (12 ms)
      ✕ Can retrieve created AI follower (1 ms)
      ✕ Can update AI follower details (1 ms)
    Workflow Tests
      ✕ Complete workflow: Create circle -> Create post in circle -> Verify post in circle (5 ms)

  ● Data Creation Tests › User Profile Tests › Can retrieve authenticated user profile

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      92 |       const response = await authenticatedAgent.get('/api/user');
      93 |       
    > 94 |       expect(response.status).toBe(200);
         |                               ^
      95 |       expect(response.body).toHaveProperty('id');
      96 |       expect(response.body).toHaveProperty('username');
      97 |     });

      at Object.<anonymous> (data-creation.test.cjs:94:31)

  ● Data Creation Tests › User Profile Tests › Can update user profile

    expect(received).toHaveProperty(path, value)

    Expected path: "bio"
    Received path: []

    Expected value: "This is a test bio updated by automated tests"
    Received value: {}

      106 |       
      107 |       expect(response.status).toBe(200);
    > 108 |       expect(response.body).toHaveProperty('bio', updates.bio);
          |                             ^
      109 |       expect(response.body).toHaveProperty('avatarUrl', updates.avatarUrl);
      110 |     });
      111 |   });

      at Object.<anonymous> (data-creation.test.cjs:108:29)

  ● Data Creation Tests › Circle Tests › Can create a new circle

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      123 |       const response = await authenticatedAgent.post('/api/circles').send(circleData);
      124 |       
    > 125 |       expect(response.status).toBe(200);
          |                               ^
      126 |       expect(response.body).toHaveProperty('id');
      127 |       expect(response.body).toHaveProperty('name', circleData.name);
      128 |       expect(response.body).toHaveProperty('description', circleData.description);

      at Object.<anonymous> (data-creation.test.cjs:125:31)

  ● Data Creation Tests › Circle Tests › Can retrieve created circle

    Test circle ID not available. Circle creation test may have failed.

      134 |     test('Can retrieve created circle', async () => {
      135 |       if (!testCircleId) {
    > 136 |         throw new Error('Test circle ID not available. Circle creation test may have failed.');
          |               ^
      137 |       }
      138 |       
      139 |       const response = await authenticatedAgent.get(`/api/circles/${testCircleId}`);

      at Object.<anonymous> (data-creation.test.cjs:136:15)

  ● Data Creation Tests › Circle Tests › Can update circle details

    Test circle ID not available. Circle creation test may have failed.

      145 |     test('Can update circle details', async () => {
      146 |       if (!testCircleId) {
    > 147 |         throw new Error('Test circle ID not available. Circle creation test may have failed.');
          |               ^
      148 |       }
      149 |       
      150 |       const updates = {

      at Object.<anonymous> (data-creation.test.cjs:147:15)

  ● Data Creation Tests › Post Tests › Can create a new post

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      171 |       const response = await authenticatedAgent.post('/api/posts').send(postData);
      172 |       
    > 173 |       expect(response.status).toBe(200);
          |                               ^
      174 |       expect(response.body).toHaveProperty('id');
      175 |       expect(response.body).toHaveProperty('content', postData.content);
      176 |       expect(response.body).toHaveProperty('userId');

      at Object.<anonymous> (data-creation.test.cjs:173:31)

  ● Data Creation Tests › Post Tests › Can retrieve created post

    Test post ID not available. Post creation test may have failed.

      182 |     test('Can retrieve created post', async () => {
      183 |       if (!testPostId) {
    > 184 |         throw new Error('Test post ID not available. Post creation test may have failed.');
          |               ^
      185 |       }
      186 |       
      187 |       const response = await authenticatedAgent.get(`/api/posts/${testPostId}`);

      at Object.<anonymous> (data-creation.test.cjs:184:15)

  ● Data Creation Tests › AI Follower Tests › Can create a new AI follower

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      205 |       const response = await authenticatedAgent.post('/api/followers').send(followerData);
      206 |       
    > 207 |       expect(response.status).toBe(200);
          |                               ^
      208 |       expect(response.body).toHaveProperty('id');
      209 |       expect(response.body).toHaveProperty('name', followerData.name);
      210 |       expect(response.body).toHaveProperty('personality', followerData.personality);

      at Object.<anonymous> (data-creation.test.cjs:207:31)

  ● Data Creation Tests › AI Follower Tests › Can retrieve created AI follower

    Test follower ID not available. Follower creation test may have failed.

      216 |     test('Can retrieve created AI follower', async () => {
      217 |       if (!testFollowerId) {
    > 218 |         throw new Error('Test follower ID not available. Follower creation test may have failed.');
          |               ^
      219 |       }
      220 |       
      221 |       const response = await authenticatedAgent.get(`/api/followers/${testFollowerId}`);

      at Object.<anonymous> (data-creation.test.cjs:218:15)

  ● Data Creation Tests › AI Follower Tests › Can update AI follower details

    Test follower ID not available. Follower creation test may have failed.

      228 |     test('Can update AI follower details', async () => {
      229 |       if (!testFollowerId) {
    > 230 |         throw new Error('Test follower ID not available. Follower creation test may have failed.');
          |               ^
      231 |       }
      232 |       
      233 |       const updates = {

      at Object.<anonymous> (data-creation.test.cjs:230:15)

  ● Data Creation Tests › Workflow Tests › Complete workflow: Create circle -> Create post in circle -> Verify post in circle

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      257 |       
      258 |       const circleResponse = await authenticatedAgent.post('/api/circles').send(circleData);
    > 259 |       expect(circleResponse.status).toBe(200);
          |                                     ^
      260 |       circleId = circleResponse.body.id;
      261 |       
      262 |       // Step 2: Create a post within this circle

      at Object.<anonymous> (data-creation.test.cjs:259:37)

Test Suites: 1 failed, 1 total
Tests:       11 failed, 11 total
Snapshots:   0 total
Time:        0.483 s, estimated 1 s
Ran all test suites matching /data-creation.test.cjs/i.
Some tests may fail if the server is not running or if authentication is not working correctly.
These tests are still useful to verify API structure and endpoint paths.
Running workflow tests...
Note: Tests will automatically detect the available server port (tries ports 80, 5000, 5001)
  console.log
    Failed to connect to http://localhost:80: connect ECONNREFUSED 127.0.0.1:80

      at findWorkingBaseUrl (auth-helper.test.cjs:34:15)

  console.log
    Successfully connected to http://localhost:5000 (got 401 as expected for unauthenticated request)

      at findWorkingBaseUrl (auth-helper.test.cjs:26:17)

  console.log
    Using base URL: http://localhost:5000

      at initializeBaseUrl (auth-helper.test.cjs:47:11)

  console.log
    Workflow tests using base URL: http://localhost:5000

      at Object.<anonymous> (workflow.test.cjs:30:13)

  console.log
    Attempting to register user: testuser_6772351d

      at registerTestUser (auth-helper.test.cjs:95:11)

  console.log
    Registration response status: 200

      at registerTestUser (auth-helper.test.cjs:103:13)

  console.log
    Test user registration successful or user already exists

      at registerTestUser (auth-helper.test.cjs:108:15)

  console.log
    Registered user data: {"username":"testuser_6772351d","password":"testpassword","email":"test_6772351d@example.com"}

      at registerTestUser (auth-helper.test.cjs:117:15)

  console.log
    Test user login successful

      at loginTestUser (auth-helper.test.cjs:154:15)

  console.log
    Testing authentication for user: testuser_6772351d

      at getAuthenticatedAgent (auth-helper.test.cjs:212:13)

  console.error
    Authentication check failed - user is not authenticated

      215 |     const authenticated = await isAuthenticated(authenticatedAgent);
      216 |     if (!authenticated) {
    > 217 |       console.error('Authentication check failed - user is not authenticated');
          |               ^
      218 |       throw new Error('Failed to authenticate test user');
      219 |     }
      220 |     

      at getAuthenticatedAgent (auth-helper.test.cjs:217:15)
      at Object.<anonymous> (workflow.test.cjs:34:20)

  console.error
    Error getting authenticated agent: Error: Failed to authenticate test user
        at getAuthenticatedAgent (/home/runner/workspace/auth-helper.test.cjs:218:13)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at Object.<anonymous> (/home/runner/workspace/workflow.test.cjs:34:20)

      224 |     return { agent: authenticatedAgent, user };
      225 |   } catch (error) {
    > 226 |     console.error('Error getting authenticated agent:', error);
          |             ^
      227 |     throw error;
      228 |   }
      229 | }

      at getAuthenticatedAgent (auth-helper.test.cjs:226:13)
      at Object.<anonymous> (workflow.test.cjs:34:20)

  console.error
    Error setting up authenticated agent: Error: Failed to authenticate test user
        at getAuthenticatedAgent (/home/runner/workspace/auth-helper.test.cjs:218:13)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at Object.<anonymous> (/home/runner/workspace/workflow.test.cjs:34:20)

      37 |       console.log(`Test user created with ID: ${testUser.id || 'unknown'}`);
      38 |     } catch (error) {
    > 39 |       console.error('Error setting up authenticated agent:', error);
         |               ^
      40 |       throw error;
      41 |     }
      42 |   });

      at Object.<anonymous> (workflow.test.cjs:39:15)

 FAIL  ./workflow.test.cjs
  CircleTube Workflow Tests
    AI Follower Interaction Workflow
      ✕ Create follower -> Create post -> Verify follower response (1 ms)
    Circle Collaboration Workflow
      ✕ Create circle -> Invite member -> Member joins -> Create post -> View activity
    User Profile and Settings Workflow
      ✕ Update profile -> Change settings -> Verify changes persisted
    AI Follower Collective Workflow
      ✕ Create collective -> Add follower -> Verify follower is in collective

  ● CircleTube Workflow Tests › AI Follower Interaction Workflow › Create follower -> Create post -> Verify follower response

    Failed to authenticate test user

      216 |     if (!authenticated) {
      217 |       console.error('Authentication check failed - user is not authenticated');
    > 218 |       throw new Error('Failed to authenticate test user');
          |             ^
      219 |     }
      220 |     
      221 |     console.log('Authentication successful!');

      at getAuthenticatedAgent (auth-helper.test.cjs:218:13)
      at Object.<anonymous> (workflow.test.cjs:34:20)

  ● CircleTube Workflow Tests › Circle Collaboration Workflow › Create circle -> Invite member -> Member joins -> Create post -> View activity

    Failed to authenticate test user

      216 |     if (!authenticated) {
      217 |       console.error('Authentication check failed - user is not authenticated');
    > 218 |       throw new Error('Failed to authenticate test user');
          |             ^
      219 |     }
      220 |     
      221 |     console.log('Authentication successful!');

      at getAuthenticatedAgent (auth-helper.test.cjs:218:13)
      at Object.<anonymous> (workflow.test.cjs:34:20)

  ● CircleTube Workflow Tests › User Profile and Settings Workflow › Update profile -> Change settings -> Verify changes persisted

    Failed to authenticate test user

      216 |     if (!authenticated) {
      217 |       console.error('Authentication check failed - user is not authenticated');
    > 218 |       throw new Error('Failed to authenticate test user');
          |             ^
      219 |     }
      220 |     
      221 |     console.log('Authentication successful!');

      at getAuthenticatedAgent (auth-helper.test.cjs:218:13)
      at Object.<anonymous> (workflow.test.cjs:34:20)

  ● CircleTube Workflow Tests › AI Follower Collective Workflow › Create collective -> Add follower -> Verify follower is in collective

    Failed to authenticate test user

      216 |     if (!authenticated) {
      217 |       console.error('Authentication check failed - user is not authenticated');
    > 218 |       throw new Error('Failed to authenticate test user');
          |             ^
      219 |     }
      220 |     
      221 |     console.log('Authentication successful!');

      at getAuthenticatedAgent (auth-helper.test.cjs:218:13)
      at Object.<anonymous> (workflow.test.cjs:34:20)

Test Suites: 1 failed, 1 total
Tests:       4 failed, 4 total
Snapshots:   0 total
Time:        0.373 s, estimated 1 s
Ran all test suites matching /workflow.test.cjs/i.
Some tests may fail if the server is not running or if authentication is not working correctly.
These tests are still useful to verify API structure and endpoint paths.

=== Test Results Summary ===
--- Basic Tests ---
✓ Simple math tests: PASSED
✓ Schema validation tests: PASSED
--- API Authentication Tests ---
✓ API tests: PASSED
✓ Followers API tests: PASSED
✓ Posts API tests: PASSED
✓ Circles API tests: PASSED
✓ Authentication tests: PASSED
--- Advanced Tests ---
✗ Data creation tests: FAILED
✗ Workflow tests: FAILED
Basic tests passed!
Some API tests failed - this is expected if server is not accessible.
These tests are primarily for validating test structure, not live data.
~/workspace$ 